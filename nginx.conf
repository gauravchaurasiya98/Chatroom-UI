server {
    listen 80;
    listen [::]:80;
    server_name localhost;
    set $baseURL "$scheme://chatroom-be:5000";  # Using Kubernetes service name

    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        root /usr/share/nginx/html;
    }

    # location /env.js {
    #     default_type application/javascript;
    #     return 200 "window.env = { VITE_API_BASE_URL: '${VITE_API_BASE_URL}' };";
    # }

    # Serve static files
    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }

    # Proxy API requests (auth, user, api)
    location ~ ^/(auth|user|api)/ {
        # Handle OPTIONS preflight requests
        if ($request_method = OPTIONS) {
            add_header Access-Control-Allow-Origin $http_origin always;
            add_header Access-Control-Allow-Credentials true always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Authorization, Content-Type, Cookie" always;
            add_header Access-Control-Max-Age 1728000;
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }
        proxy_pass $baseURL;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Authorization $http_authorization;
        proxy_set_header Content-Type $http_content_type;
        proxy_set_header Cookie $http_cookie;
        proxy_set_header Origin $http_origin;
        proxy_set_header Access-Control-Allow-Origin $http_origin;
        proxy_set_header Access-Control-Allow-Credentials true;
        proxy_set_header Access-Control-Allow-Methods 'GET, POST, PUT, PATCH, DELETE, OPTIONS';
        proxy_set_header Access-Control-Allow-Headers 'Authorization, Content-Type, Cookie';
    }

    # Handle WebSocket connections for Socket.io
    location /socket.io/ {
        proxy_pass $baseURL;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}
